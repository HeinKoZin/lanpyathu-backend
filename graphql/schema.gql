# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryEntity {
  createdAt: String!
  id: String!
  image: String!
  name: String!
  parentId: String
  updatedAt: String!
}

input CreateCategoryInput {
  image: String!
  name: String!
  parentId: String
}

input CreateSayartawInput {
  """Sayartaw bio"""
  bio: String!

  """Sayartaw cover"""
  cover: String!

  """Sayartaw name"""
  name: String!
}

input CreateTayartawInput {
  categoryIds: [String!]

  """Tayartaw Cover"""
  cover: String!

  """Tayartaw Description"""
  description: String!

  """Tayartaw Path"""
  path: String!

  """Sayartaw ID"""
  sayartawId: String!

  """Tayartaw Title"""
  title: String!
}

input CreateUserInput {
  """User's email"""
  email: String!

  """User's name"""
  name: String!
  password: String!

  """User's photo"""
  photo: String!
}

type LoginResponse {
  """User token"""
  token: String!

  """User data"""
  user: UserEntity!
}

input LoginUserInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!): CategoryEntity!
  createSayartaw(createSayartawInput: CreateSayartawInput!): SayartawEntity!
  createTayartaw(createTayartawInput: CreateTayartawInput!): TayartawEntity!
  createUser(createUserInput: CreateUserInput!): UserEntity!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  removeCategory(id: String!): CategoryEntity!
  removeSayartaw(id: String!): SayartawEntity!
  removeTayartaw(id: String!): TayartawEntity!
  removeUser(id: Int!): UserEntity!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): CategoryEntity!
  updateSayartaw(updateSayartawInput: UpdateSayartawInput!): SayartawEntity!
  updateTayartaw(updateTayartawInput: UpdateTayartawInput!): TayartawEntity!
  updateUser(updateUserInput: UpdateUserInput!): UserEntity!
  uploadUserProfilePic(uploadUserProfilePicInput: UploadUserProfilePicInput!): UploadResponse!
}

type Query {
  categories: [CategoryEntity!]!
  category(id: String!): CategoryEntity!
  me: UserEntity!
  sayartaw(id: String!): SayartawEntity!
  sayartaws: [SayartawEntity!]!
  tayartaw(id: Int!): TayartawEntity!
  tayartaws: [TayartawEntity!]!

  """Find user by id or email"""
  user(id: String!): UserEntity!

  """Get all users"""
  users: [UserEntity!]!
}

type SayartawEntity {
  """Sayartaw bio"""
  bio: String!

  """Sayartaw cover"""
  cover: String!

  """Sayartaw createdAt"""
  createdAt: String!

  """Sayartaw ID"""
  id: String!

  """Sayartaw name"""
  name: String!
  tayartaws: [TayartawEntity!]!

  """Sayartaw updatedAt"""
  updatedAt: String!
}

type TayartawEntity {
  categories: [CategoryEntity!]!

  """Tayartaw Cover"""
  cover: String!

  """Tayartaw CreatedAt"""
  createdAt: String!

  """Tayartaw Description"""
  description: String!

  """Tayartaw ID"""
  id: String!

  """Tayartaw Path"""
  path: String!
  sayartaw: SayartawEntity!

  """Sayartaw ID"""
  sayartawId: String!

  """Tayartaw Title"""
  title: String!

  """Tayartaw UpdatedAt"""
  updatedAt: String!
}

input UpdateCategoryInput {
  id: String!
  image: String
  name: String
  parentId: String
}

input UpdateSayartawInput {
  """Sayartaw bio"""
  bio: String

  """Sayartaw cover"""
  cover: String
  id: String!

  """Sayartaw name"""
  name: String
}

input UpdateTayartawInput {
  categoryIds: [String!]

  """Tayartaw Cover"""
  cover: String

  """Tayartaw Description"""
  description: String
  id: String!

  """Tayartaw Path"""
  path: String

  """Sayartaw ID"""
  sayartawId: String

  """Tayartaw Title"""
  title: String
}

input UpdateUserInput {
  id: String!
  role: UserRole!
}

"""Upload custom scalar type"""
scalar Upload

type UploadResponse {
  success: Boolean!
}

input UploadUserProfilePicInput {
  id: String!
  photo: Upload!
}

type UserEntity {
  """User's createdAt"""
  createdAt: String!

  """User's email"""
  email: String!

  """User's ID"""
  id: String!

  """User's name"""
  name: String!

  """User's photo"""
  photo: String!

  """User's role"""
  role: UserRole!

  """User's updatedAt"""
  updatedAt: String!
}

"""User role"""
enum UserRole {
  ADMIN
  EDITOR
  USER
}